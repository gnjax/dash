generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model FxRate {
  date      DateTime
  base      String
  quote     String
  rate      Decimal   @db.Decimal(20, 10)
  source    String    @default("frankfurter")
  fetchedAt DateTime  @default(now())

  @@id([date, base, quote])
  @@index([base, quote])
}

model ListingImageCache {
  listingId String   @id
  source    String?
  url       String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

/// =====================
/// INVENTORY MODELS
/// =====================

enum InventoryOriginType {
  Scraped
  Manual
}

enum InventoryCondition {
  Loose
  Boxed
  CIB
  NIB
}

model InventoryItem {
  id            String               @id @default(uuid())
  name          String
  originType    InventoryOriginType
  scrapedItemId String?
  manualLineId  String?
  fillEntryId   String?
  ordinal       Int?
  createdAt     DateTime             @default(now())

  condition     InventoryCondition   @default(Loose)

  tags          InventoryItemTag[]

  @@index([scrapedItemId])
  @@index([manualLineId])
  @@index([fillEntryId])
  @@unique([fillEntryId, ordinal])
}

model InventoryItemTag {
  itemId      String
  tagId       String
  placementId String?

  item InventoryItem @relation(fields: [itemId], references: [id], onDelete: Cascade)
  tag  Tag           @relation(fields: [tagId], references: [id], onDelete: Cascade)

  @@id([itemId, tagId])
  @@index([tagId])
}

/// =====================
/// MANUAL PURCHASE INPUT
/// =====================

model ManualPurchase {
  id                       String   @id @default(uuid())
  currency                 String   @default("JPY")
  intlShippingTotalYen     Decimal  @default(0) @db.Decimal(12, 2)
  domesticShippingTotalYen Decimal  @default(0) @db.Decimal(12, 2)
  customsTotalYen          Decimal  @default(0) @db.Decimal(12, 2)
  subtotalYen              Decimal? @db.Decimal(12, 2)
  notes                    String?
  createdAt                DateTime @default(now())

  lines ManualLine[]
}

model ManualLine {
  id               String   @id @default(uuid())
  manualPurchaseId String
  title            String
  priceYen         Decimal  @db.Decimal(12, 2)

  purchase ManualPurchase @relation(fields: [manualPurchaseId], references: [id], onDelete: Cascade)

  @@index([manualPurchaseId])
}

/// =====================
/// FILL SESSION + INPUTS
/// =====================

enum FillSourceType {
  ScrapedPackage
  Manual
}

model InventoryFillSession {
  id               String        @id @default(uuid())
  sourceType       FillSourceType
  scrapedPackageId String?
  manualPurchaseId String?
  customsTotalYen  Decimal       @default(0) @db.Decimal(12, 2)
  createdAt        DateTime      @default(now())
  finalizedAt      DateTime?

  sourceItems InventoryFillSourceItem[]
  entries     InventoryFillEntry[]

  @@index([scrapedPackageId])
  @@index([manualPurchaseId])
}

model InventoryFillSourceItem {
  id            String   @id @default(uuid())
  sessionId     String
  scrapedItemId String?
  manualLineId  String?

  shippingWeightPpm Int @default(0)

  session InventoryFillSession @relation(fields: [sessionId], references: [id], onDelete: Cascade)
  entries InventoryFillEntry[]

  @@index([sessionId])
  @@index([scrapedItemId])
  @@index([manualLineId])
}

model InventoryFillEntry {
  id                String   @id @default(uuid())
  sessionId         String
  sourceItemId      String
  nameOverride      String?
  quantity          Int      @default(1)

  priceWeightPpm    Int      @default(0)
  shippingWeightPpm Int      @default(0)

  // condition chosen at fill-time, copied to InventoryItem(s)
  condition InventoryCondition @default(Loose)

  entryTags InventoryFillEntryTag[]

  session    InventoryFillSession    @relation(fields: [sessionId], references: [id], onDelete: Cascade)
  sourceItem InventoryFillSourceItem @relation(fields: [sourceItemId], references: [id], onDelete: Cascade)

  @@index([sessionId])
  @@index([sourceItemId])
}

model InventoryFillEntryTag {
  entryId     String
  tagId       String
  placementId String?

  entry InventoryFillEntry @relation(fields: [entryId], references: [id], onDelete: Cascade)
  tag   Tag                @relation(fields: [tagId], references: [id], onDelete: Cascade)

  @@id([entryId, tagId])
  @@index([tagId])
}

model Tag {
  id          String  @id @default(uuid())
  name        String
  description String?

  // NEW: reference image for this tag (e.g., game box/cart art)
  photoUrl    String?

  placements    TagPlacement[]
  itemTags      InventoryItemTag[]
  fillEntryTags InventoryFillEntryTag[]

  @@unique([name])
  @@index([name])
}

model TagPlacement {
  id                String  @id @default(uuid())
  tagId             String
  parentPlacementId String?

  tag      Tag            @relation(fields: [tagId], references: [id], onDelete: Restrict)
  parent   TagPlacement?  @relation("TP_Children", fields: [parentPlacementId], references: [id])
  children TagPlacement[] @relation("TP_Children")

  asAncestor   PlacementClosure[] @relation("PC_Ancestor")
  asDescendant PlacementClosure[] @relation("PC_Descendant")

  @@unique([parentPlacementId, tagId])
  @@index([tagId])
}

model PlacementClosure {
  ancestorPlacementId   String
  descendantPlacementId String
  depth                 Int

  ancestor   TagPlacement @relation("PC_Ancestor", fields: [ancestorPlacementId], references: [id], onDelete: Cascade)
  descendant TagPlacement @relation("PC_Descendant", fields: [descendantPlacementId], references: [id], onDelete: Cascade)

  @@id([ancestorPlacementId, descendantPlacementId])
  @@index([descendantPlacementId, depth])
  @@index([ancestorPlacementId, depth])
}

enum PackageStatus {
  Todo
  Processed
  Blacklist
}

model ScrapedPackage {
  id      String @id @default(uuid())
  source  String @default("buyee")
  pageUrl String

  dateShipped        DateTime?
  packageNumber      String    @unique
  intlTrackingNumber String?
  intlTrackingUrl    String?

  internationalShippingFeeYen Decimal? @db.Decimal(12, 2)
  domesticShippingFeeYen      Decimal? @db.Decimal(12, 2)

  raw         Json?
  firstSeenAt DateTime @default(now())
  lastSeenAt  DateTime @default(now())

  status PackageStatus @default(Todo)

  items ScrapedItem[]

  @@index([dateShipped])
  @@index([intlTrackingNumber])
}

model ScrapedItem {
  id               String   @id @default(uuid())
  scrapedPackageId String
  orderNumber      String?
  titleJa          String?
  titleEn          String?
  itemUrl          String?
  listingId        String?
  priceYen         Decimal? @db.Decimal(12, 2)

  scrapedPackage ScrapedPackage @relation(fields: [scrapedPackageId], references: [id], onDelete: Cascade)

  @@index([scrapedPackageId])
  @@index([listingId])
}
